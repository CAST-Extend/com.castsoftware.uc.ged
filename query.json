[
    {
        "report": "{config.aip_name}Project_Information",
        "ouputFolder" : "Postgres",
        "tabs": [
            {
                "queryName": "ASP",
            	"queryType" : "css",
                "query": [
                    "select object_name as \"Project Name\", rootpath as \"Project Reference\" from {config.aip_triplet_prefix}_mngt.cms_asp_project"
                ]
            },
            {
                "queryName": "ASM",
            	"queryType" : "css",
                "query": [
                    "select assemblypath as \"Assembly Name\" from {config.aip_triplet_prefix}_mngt.cms_net_assembly_file"
                ]
            },
            {
                "queryName": "CPP",
            	"queryType" : "css",
                "query": [
                    "select object_name as \"Project Name\", rootpath as \"Project Reference\" from {config.aip_triplet_prefix}_mngt.cms_cpp_project"
                ]
            }
        ]
    },
    {
        "report": "{config.aip_name}_Complex_Objects",
        "ouputFolder" : "Cypher",
        "tabs": [
            {
                "queryName": "CC - Objects",
            	"queryType" : "cypher",
                "query": [
                    "MATCH (o:Object:{config.aip_name})-[r]->(p:ObjectProperty)",
                    "WHERE p.Description CONTAINS 'Cyclomatic Complexity'",
                    "WITH o,p.Description as CCcomplexityDesc ,SUM(toInteger(r.value)) as totalCCComplexity  ",
                    "Optional MATCH (o)-[r1]->(p1:ObjectProperty) WHERE p1.Description='File' ",
                    "With o,CCcomplexityDesc  ,totalCCComplexity  ,r1.value as Path ",
                    "Optional MATCH (o)-[r2]->(p2:ObjectProperty) WHERE p2.Description CONTAINS 'Essential Complexity' ",
                    "With o,CCcomplexityDesc  ,totalCCComplexity  , Path , p2.Description as ECcomplexityDesc ,SUM(toInteger(r2.value)) as totalECComplexity ",
                    "Optional MATCH (o)-[r3]->(p3:ObjectProperty) WHERE p3.Description CONTAINS 'Integration Complexity' ",
                    "With o,CCcomplexityDesc  ,totalCCComplexity,ECcomplexityDesc  ,totalECComplexity  , Path , p3.Description as ICcomplexityDesc ,SUM(toInteger(r3.value)) as totalICComplexity ",
                    "RETURN  o.Type as `Type`, o.Name as `Name`, o.FullName as `FullName`, Path as `Path` , totalCCComplexity as `Cyclomatic Complexity` , totalECComplexity as `Essential Complexity`,totalICComplexity as `Integration Complexity`"
                ],
                "formating": {
                    "Type": {
                        "width": 20
                    },
                    "Name": {
                        "width": 20
                    },
                    "FullName": {
                        "width": 20
                    },
                    "Path": {
                        "width": 20
                    },
                    "Cyclomatic Complexity": {
                        "width": 20
                    },
                    "Essential Complexity": {
                        "width": 20
                    },
                    "Integration Complexity": {
                        "width": 20
                    }
                }
            },
            {
                "queryName": "CC - Sub objects",
            	"queryType" : "cypher",
                "query": [
                    "MATCH (o:SubObject:{config.aip_name})-[r]->(p:ObjectProperty)",
                    "WHERE p.Description CONTAINS 'Cyclomatic Complexity'",
                    "WITH o,p.Description as CCcomplexityDesc ,SUM(toInteger(r.value)) as totalCCComplexity  ",
                    "Optional MATCH (o)-[r1]->(p1:ObjectProperty) WHERE p1.Description='File' ",
                    "With o,CCcomplexityDesc  ,totalCCComplexity  ,r1.value as Path ",
                    "Optional MATCH (o)-[r2]->(p2:ObjectProperty) WHERE p2.Description CONTAINS 'Essential Complexity' ",
                    "With o,CCcomplexityDesc  ,totalCCComplexity  , Path , p2.Description as ECcomplexityDesc ,SUM(toInteger(r2.value)) as totalECComplexity ",
                    "Optional MATCH (o)-[r3]->(p3:ObjectProperty) WHERE p3.Description CONTAINS 'Integration Complexity' ",
                    "With o,CCcomplexityDesc  ,totalCCComplexity,ECcomplexityDesc  ,totalECComplexity  , Path , p3.Description as ICcomplexityDesc ,SUM(toInteger(r3.value)) as totalICComplexity ",
                    "RETURN  o.Type as `Type`, o.Name as `Name`, o.FullName as `FullName`, Path , totalCCComplexity as `Cyclomatic Complexity` , totalECComplexity as `Essential Complexity`,totalICComplexity as `Integration Complexity`"
                ],
                "formating": {
                    "Type": {
                        "width": 20
                    },
                    "Name": {
                        "width": 20
                    },
                    "FullName": {
                        "width": 20
                    },
                    "Path": {
                        "width": 20
                    },
                    "Cyclomatic Complexity": {
                        "width": 20
                    },
                    "Essential Complexity": {
                        "width": 20
                    },
                    "Integration Complexity": {
                        "width": 20
                    }
                }
            }
        ]
    },
    {
        "report": "{config.aip_name}_Dead_Code",
        "ouputFolder" : "Cypher",
        "tabs": [
            {
                "queryName": "DeadCode",
            	"queryType" : "cypher",
                "query": [
                    "MATCH (o:Object:`{config.aip_name}`) WHERE Not (o)-[]-(:Object) ",
                    "with o ",
                    "Optional MATCH (o)-[r1]->(p2:ObjectProperty) WHERE p2.Description='File' ",
                    "With o,r1.value as Path ",
                    "RETURN DISTINCT o.Type,o.Name, o.FullName,Path ",
                    "UNION ALL",
                    "MATCH (o:SubObject:`{config.aip_name}`) WHERE Not (o)-[]-(:SubObject) ",
                    "with o ",
                    "Optional MATCH (o)-[r1]->(p2:ObjectProperty) WHERE p2.Description='File' ",
                    "With o,r1.value as Path ",
                    "RETURN DISTINCT o.Type, o.Name, o.FullName, Path"
                ],
                "formating": {
                    "o.Type": {
                        "width": 20
                    },
                    "o.Name": {
                        "width": 20
                    },
                    "o.FullName": {
                        "width": 20
                    },
                    "Path": {
                        "width": 20
                    }
                }
            }
        ]
    },
    {
        "report": "{config.aip_name}_API",
        "ouputFolder" : "Cypher",
        "tabs": [
            {
                "queryName": "API",
            	"queryType" : "cypher",
                "query": [
                    "MATCH (m:Module:{config.aip_name})-[:Contains]->(o1:Object)-[]-(o2:Object)<-[]-(l:Level5) ",
                    "WHERE l.Name CONTAINS 'API' ",
                    "RETURN DISTINCT m.Name as `Repository Name`, COLLECT(DISTINCT l.Name) as `API Name` "
                ],
                "formating": {
                    "Repository Name": {
                        "width": 20
                    },
                    "API Name": {
                        "width": 20
                    }
                }
            }
        ]
    },
    {
        "report": "{config.aip_name}_API_Name",
        "ouputFolder" : "Cypher",
        "tabs": [
            {
                "queryName": "API Name",
            	"queryType" : "cypher",
                "query": [
                    "MATCH (m:Module:{config.aip_name})-[:Contains]->(o1:Object)-[]-(o2:Object)<-[]-(l:Level5) ",
                    "WHERE l.Name CONTAINS 'API' ",
                    "RETURN DISTINCT l.Name as `API Name` "
                ],
                "formating": {
                    "API Name": {
                        "width": 20
                    }
                }
            }
        ]
    },
    {
        "report": "{config.aip_name}_ShellProgram",
        "ouputFolder" : "Cypher",
        "tabs": [
            {
                "queryName": "ShellProgram",
            	"queryType" : "cypher",
                "query": [
                    "MATCH (o:Object: {config.aip_name})",
                    "WHERE o.Type = 'SHELL Program'",
                    "RETURN distinct o.Name as `ObjectName`,o.FullName as `ObjectFullName`,o.Type,SPLIT(o.FullName,'\\\\')[5] as `RepositoryName`"
                ],
                "formating": {
                    "ObjectName": {
                        "width": 20
                    },
                    "ObjectFullName": {
                        "width": 20
                    },
                    "RepositoryName": {
                        "width": 20
                    },
                    "o.Type": {
                        "width": 20
                    }
                }
            }
        ]
    },
    {
        "report": "{config.aip_name}_MainCallingShellProgram",
        "ouputFolder" : "Cypher",
        "tabs": [
            {
                "queryName": "MainCallingShellProgram",
            	"queryType" : "cypher",
                "query": [
                    "MATCH (caller:Object:{config.aip_name})-[:CALL]->(callee:Object:ATCS)",
					"WHERE caller.Type='SHELL Program' ",
					"AND NOT (()-[:CALL]->(caller)) ",
					"RETURN caller.Name,caller.FullName,caller.Type,SPLIT(caller.FullName,'\\\\')[5] as CallerRepositoryName ,callee.Name,callee.FullName,callee.Type,SPLIT(callee.FullName,'\\\\')[5] as CalleeRepositoryName "
                ],
                "formating": {
                    "caller.Name": {
                        "width": 20
                    },
                    "caller.FullName": {
                        "width": 20
                    },
                    "caller.Type": {
                        "width": 20
                    },
                    "CallerRepositoryName": {
                        "width": 20
                    },
                    "callee.Name": {
                        "width": 20
                    },
                    "callee.FullName": {
                        "width": 20
                    },
                    "callee.Type": {
                        "width": 20
                    },
                    "CalleeRepositoryName": {
                        "width": 20
                    }
                }
            }
        ]
    },
    {
        "report": "{config.aip_name}_C++Repo",
        "ouputFolder" : "Cypher",
        "tabs": [
            {
                "queryName": "C++ Repo",
            	"queryType" : "cypher",
                "query": [
                    "MATCH (o:Object:{config.aip_name}) ",
					"WHERE o.Type='C/C++ File' ",
					"Optional MATCH (o)-[r1]->(p2:ObjectProperty) WHERE p2.Description='File' ",
					"with o,r1.value as Path  ",
					"return distinct o.Name,o.FullName,o.Type,SPLIT(Path,'\\\\')[5] as RepositoryName"
                ],
                "formating": {
                    "o.Name": {
                        "width": 20
                    },
                    "o.FullName": {
                        "width": 20
                    },
                    "o.Type": {
                        "width": 20
                    },
                    "RepositoryName": {
                        "width": 20
                    }
                }
            }
        ]
    },
    {
        "report": "{config.aip_name}_CloudReady",
        "ouputFolder" : "Cypher",
        "tabs": [
            {
                "queryName": "Cloud Ready",
            	"queryType" : "cypher",
                "query": [
                    "MATCH (h:HighlightProperty)",
					"MATCH(o:{config.aip_name})-[r:Property]->(op:ObjectProperty)",
					"WHERE op.Id STARTS WITH h.AipId",
					"AND op.Id ENDS WITH 'CloudReady' ",
					"with o,r.value AS Value,op.Description AS Description,op.Doc as Doc_link,op.Tags as Tags ",
					"Optional MATCH (o)-[r1]->(p2:ObjectProperty) WHERE p2.Description='File' ",
					"with o,r1.value as Path  ,Value,Description,Doc_link, Tags",
					"RETURN o.FullName AS ObjectFullname,o.Type as ObjectType,  Value as CodeLine, Description, Doc_link, Tags,SPLIT(Path,'\\\\')[5] as RepositoryName ,    Path  "
                ],
                "formating": {
                    "ObjectFullname": {
                        "width": 20
                    },
                    "ObjectType": {
                        "width": 20
                    },
                    "CodeLine": {
                        "width": 20
                    },
                    "Description": {
                        "width": 20
                    },
                    "Doc_link": {
                        "width": 20
                    },
                    "Tags": {
                        "width": 20
                    },
                    "RepositoryName": {
                        "width": 20
                    },
                    "Path": {
                        "width": 20
                    }
                }
            }
        ]
    },
    {
        "report": "{config.aip_name}_Containerization",
        "ouputFolder" : "Cypher",
        "tabs": [
            {
                "queryName": "Containerization",
            	"queryType" : "cypher",
                "query": [
                    "MATCH (h:HighlightProperty)",
					"MATCH(o:{config.aip_name})-[r:Property]->(op:ObjectProperty)",
					"WHERE op.Id STARTS WITH h.AipId",
					"AND op.Id ENDS WITH 'Container' ",
					"with o,r.value AS Value,op.Description AS Description,op.Doc as Doc_link,op.Tags as Tags ",
					"Optional MATCH (o)-[r1]->(p2:ObjectProperty) WHERE p2.Description='File' ",
					"with o,r1.value as Path  ,Value,Description,Doc_link, Tags",
					"RETURN o.FullName AS ObjectFullname,o.Type as ObjectType,  Value as CodeLine, Description, Doc_link, Tags,SPLIT(Path,'\\\\')[5] as RepositoryName, Path"          
				],
                "formating": {
                    "ObjectFullname": {
                        "width": 20
                    },
                    "ObjectType": {
                        "width": 20
                    },
                    "CodeLine": {
                        "width": 20
                    },
                    "Description": {
                        "width": 20
                    },
                    "Doc_link": {
                        "width": 20
                    },
                    "Tags": {
                        "width": 20
                    },
                    "RepositoryName": {
                        "width": 20
                    },
                    "Path": {
                        "width": 20
                    }
                }
            }
        ]
    },
    {
        "report": "{config.aip_name}_Object_LOC",
        "ouputFolder" : "Cypher",
        "tabs": [
            {
                "queryName": "Object_LOC",
            	"queryType" : "cypher",
                "query": [
                    "MATCH (o:Object:{config.aip_name})-[r]->(p:ObjectProperty) WHERE p.Description CONTAINS 'Number of code lines'",
					"WITH o,r.value as `Numberofcodelines` ",
					"Optional MATCH (o)-[r1]->(p2:ObjectProperty) WHERE p2.Description='File' ",
					"With o, Numberofcodelines,r1.value as Path  ",
					"RETURN DISTINCT o.Type as `Object Type`, o.FullName as `Object Fullname`, o.Name as `Object Name`,Numberofcodelines,SPLIT(Path,'\\\\')[5] as RepositoryName ,Path;"
                ],
                "formating": {
                    "Object Type": {
                        "width": 20
                    },
                    "Object Fullname": {
                        "width": 20
                    },
                    "Object Name": {
                        "width": 20
                    },
                    "Numberofcodelines": {
                        "width": 20
                    },
                    "RepositoryName": {
                        "width": 20
                    },
                    "Path": {
                        "width": 20
                    }
                }
            }
        ]
    },
    {
        "report": "{config.aip_name}_ObjectCount",
        "ouputFolder" : "Cypher",
        "tabs": [
            {
                "queryName": "ObjectCount",
            	"queryType" : "cypher",
                "query": [
                    "MATCH (o:Object:{config.aip_name})",
					"RETURN DISTINCT o.Type as `Type`,COUNT(DISTINCT o.AipId) as `Total`",  
					"ORDER BY COUNT(DISTINCT o.AipId) DESC"
                ],
                "formating": {
                    "Type": {
                        "width": 20
                    },
                    "Total": {
                        "width": 20
                    }
                }
            }
        ]
    },
    {
        "report": "{config.aip_name}_Object_LOC_Summary",
        "ouputFolder" : "Cypher",
        "tabs": [
            {
                "queryName": "Object_LOC_Summary",
            	"queryType" : "cypher",
                "query": [
                    "MATCH (o:Object:{config.aip_name})",
					"WITH  o ",
					"OPTIONAL MATCH (o)-[r]->(obp:ObjectProperty) WHERE obp.Description='SNumber of code lines'",
					"RETURN DISTINCT o.Type as `Type`, COUNT(DISTINCT o.AipId) as `count_obj`, SUM(toInteger(r.value)) as tot_loc"
                ],
                "formating": {
                    "Type": {
                        "width": 20
                    },
                    "count_obj": {
                        "width": 20
                    },
                    "tot_loc": {
                        "width": 20
                    }
                }
            }
        ]
    },
    {
        "report": "{config.aip_name}_DB_HasReferences",
        "ouputFolder" : "Cypher",
        "tabs": [
            {
                "queryName": "SQL Tables",
            	"queryType" : "cypher",
                "query": [
					"MATCH (caller:Object:{config.aip_name})-[r1]->(callee:Object:{config.aip_name})",
					"WHERE callee.Type contains 'Table'",
					"and not(caller.Type contains 'Procedure') and not(caller.Type contains 'function') and not(caller.Type contains 'trigger')",
					"and not(caller.Type contains 'Table') and not(caller.Type contains 'View') and not(caller.Type contains 'Script')",
					"return DISTINCT callee.FullName "
                ],
                "formating": {
                    "callee.FullName": {
                        "width": 40
                    }
                }
            },
            {
                "queryName": "SQL Stored Procedures",
            	"queryType" : "cypher",
                "query": [
					"MATCH (caller:Object:{config.aip_name})-[r1]->(callee:Object:{config.aip_name})",
					"WHERE callee.Type contains 'Procedure'",
					"and not(caller.Type contains 'Procedure') and not(caller.Type contains 'function') and not(caller.Type contains 'trigger')",
					"and not(caller.Type contains 'Table') and not(caller.Type contains 'View') and not(caller.Type contains 'Script')",
					"return DISTINCT callee.FullName "
                ],
                "formating": {
                    "callee.FullName": {
                        "width": 40
                    }
                }
            },
            {
                "queryName": "SQL Views",
            	"queryType" : "cypher",
                "query": [
					"MATCH (caller:Object:{config.aip_name})-[r1]->(callee:Object:{config.aip_name})",
					"WHERE callee.Type contains 'View'",
					"and not(caller.Type contains 'Procedure') and not(caller.Type contains 'function') and not(caller.Type contains 'trigger')",
					"and not(caller.Type contains 'Table') and not(caller.Type contains 'View') and not(caller.Type contains 'Script')",
					"return DISTINCT callee.FullName "
                ],
                "formating": {
                    "callee.FullName": {
                        "width": 40
                    }
                }
            }
        ]
    },
    {
        "report": "{config.aip_name}_DB_NoCallers",
        "ouputFolder" : "Cypher",
        "tabs": [
            {
                "queryName": "DB_NoCallers",
            	"queryType" : "cypher",
                "query": [
                    "MATCH (o:Object:{config.aip_name})",
					"WHERE o.Type contains 'Procedure' AND NOT (:Object)-[]->(o)",
					"return DISTINCT o.FullName"
                ],
                "formating": {
                    "o.FullName": {
                        "width": 40
                    }
                }
            }
        ]
    }
]